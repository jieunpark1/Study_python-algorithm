# -*- coding: utf-8 -*-
"""
Created on Sat Jan 30 19:14:00 2021

@author: 박지은
"""

#1. 정수 N개의 합
"""
정수 n개가 주어졌을 때, n개의 합을 구하는 함수를 작성하시오
"""

"""
def solve(a):
    ans = 0
    for i in a:
        ans += i
    return ans
"""

#2. 셀프 넘버
"""
n, d(n), d(d(n)), d(d(d(n)))..
n이 33이라면, d(n) = 33 + 3+ 3 = 39, d(d(n)) = 39 + 3+ 9 = 51..
33은 39의 생성자, 39는 51의 생성자이다.

생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프넘버는
총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, ,,
n이 만보다 작거나 같을 동안 셀프넘버인 수를 재귀함수를 사용하라 
d(n)이 되게 하는 n이 없다.
"""



def selfnum():
    i = 0
    bx = []
    for i in range(1, 1001):
        res = i + i//10 + i%10
        bx.append(str(res))

    for j in range(1, int(max(bx))+1):
        if str(j) not in bx:
            print(j)
selfnum()
#100단위에서 110부터 시작해야 하는데 108부터

#3. 한수
"""
어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 
그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 
일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, 
N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오. 
ex) 110 -> 99 / 1 -> 1
"""

"""    
def f(n):
    i = 0        
    for j in range(1, n+1):
        n = str(n)
        j = str(j)
        if int(j) < 100:
            i += 1
        elif (int(j[1]) - int(j[0])) == (int(j[2]) - int(j[1])):
            i += 1
    return i

n = int(input())
print(f(n))
     
"""
"""
다른 풀이
100의 자리 -> n // 100
10의 자리 -> n % 100의 //10 ==> n %100 //10
1의 자리 -> i %10
"""
    
        
        

